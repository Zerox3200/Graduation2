{"version":3,"file":"static/js/137.a5b4875c.chunk.js","mappings":"iTAQe,SAASA,EAAWC,GAA6B,IAA5B,YAAEC,EAAW,SAAEC,GAAUF,EACzD,MAAOG,EAAOC,IAAYC,EAAAA,EAAAA,UAASC,GAY7BC,EAAaC,EAAAA,GAAW,CAC1BC,MAAOD,EAAAA,KACFE,KAAK,YAAa,cAAeC,GAAUA,GAASA,EAAMC,KAAO,UACjEF,KAAK,YAAa,aAAcC,GAAUA,GAAS,CAAC,YAAa,aAAc,aAAaE,SAASF,EAAMG,UAG9GC,GAASC,EAAAA,EAAAA,IAAU,CACrBC,cAAe,CACXR,MAAO,IACRS,SAAWC,IACVC,QAAQC,IAAIlB,GACZiB,QAAQC,IAAIF,EAAO,EACpBG,iBAAkBf,IAEzB,OAAOgB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACHF,EAAAA,EAAAA,KAACG,EAAAA,EAAOC,IAAG,CAACC,UAAU,UAAUC,QAAS,CAAEC,QAAS,GAAKC,QAAS,CAAED,QAAS,GACzEE,WAAY,CAAEC,SAAU,GAAKC,KAAM,UAAWT,UAC9CU,EAAAA,EAAAA,MAACT,EAAAA,EAAOU,KAAI,CAAClB,SAAUH,EAAOsB,aAC1BT,UAAU,oFACVC,QAAS,CAAES,EAAG,IAAMP,QAAS,CAAEO,EAAG,GAAKN,WAAY,CAAEC,SAAU,GAAKnB,KAAM,UAAWW,SAAA,EACrFF,EAAAA,EAAAA,KAACgB,EAAAA,IAAS,CAACC,QAASvC,KACpBsB,EAAAA,EAAAA,KAAA,MAAIK,UAAU,eAAcH,SAAC,wBAC7BU,EAAAA,EAAAA,MAAA,OAAKP,UAAU,sGAAqGH,SAAA,EAChHF,EAAAA,EAAAA,KAAA,OAAKkB,IAAKvC,EAAUwC,IAAI,MAAMC,QAAQ,UACtCpB,EAAAA,EAAAA,KAAA,KAAGK,UAAU,KAAIH,SAAC,0BAEtBU,EAAAA,EAAAA,MAAA,OAAKP,UAAU,sGAAqGH,SAAA,EAChHF,EAAAA,EAAAA,KAAA,OAAKkB,IAAKtC,EAAOuC,IAAI,MAAMC,QAAQ,UACnCpB,EAAAA,EAAAA,KAAA,KAAGK,UAAU,KAAIH,SAAC,iBACjBV,EAAO6B,OAAOnC,OAAQc,EAAAA,EAAAA,KAAA,QAAMK,UAAU,2BAA0BH,SAAEV,EAAO6B,OAAOnC,QAAgB,MACjGc,EAAAA,EAAAA,KAAA,SAAOK,UAAU,eAAeiB,KAAK,QAAQ/B,KAAK,OAAOgC,GAAG,WACxDC,SAAWC,IACPjC,EAAOkC,cAAc,QAASD,EAAEE,OAAOC,MAAM,IA1C/CC,KAClB,GAAIA,EAAM,CACN,MAAMC,EAAS,IAAIC,WACnBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,KACZpD,EAASiD,EAAOI,OAAO,CAE/B,GAoCoBC,CAAaV,EAAEE,OAAOC,MAAM,GAAG,QAG3C5B,EAAAA,EAAAA,KAAA,SAAOT,KAAK,SAASc,UAAU,MAAMjB,MAAM,eAAegD,OAAO,kBAKjF,C","sources":["components/Previews/ImageUpdate/ImageUpdate.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ImageUpdate.scss';\r\nimport { IoMdClose } from \"react-icons/io\";\r\nimport UploadPhoto from '../../../Image/Screen_Shot_2022-04-15_at_10.17.44_AM-removebg-preview.png';\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { motion } from 'framer-motion'\r\n\r\nexport default function ImageUpdate({ UpdateImage, OldImage }) {\r\n    const [Image, setImage] = useState(UploadPhoto);\r\n\r\n    const ImagePreview = (file) => {\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(file);\r\n            reader.onload = () => {\r\n                setImage(reader.result);\r\n            }\r\n        }\r\n    }\r\n\r\n    const Validation = Yup.object({\r\n        image: Yup.mixed()\r\n            .test(\"File_Size\", \"Too large!\", (value) => value && value.size < 1024 * 1024)\r\n            .test(\"File_Type\", \"Invalid!!\", (value) => value && ['image/png', 'image/jpeg', 'image/jpg'].includes(value.type))\r\n    })\r\n\r\n    const Formik = useFormik({\r\n        initialValues: {\r\n            image: ''\r\n        }, onSubmit: (values) => {\r\n            console.log(Image);\r\n            console.log(values);\r\n        }, validationSchema: Validation\r\n    })\r\n    return <>\r\n        <motion.div className=\"DropBox\" initial={{ opacity: 0 }} animate={{ opacity: 1 }}\r\n            transition={{ duration: 0.3, ease: 'linear' }}>\r\n            <motion.form onSubmit={Formik.handleSubmit}\r\n                className='ImageUpdate row align-content-around justify-content-evenly p-2 position-relative'\r\n                initial={{ y: 20 }} animate={{ y: 0 }} transition={{ duration: 0.8, type: 'spring' }}>\r\n                <IoMdClose onClick={UpdateImage} />\r\n                <h1 className='col-md-12 h4'>Edit Profile Image</h1>\r\n                <div className=\"ImageUpdate_Old col-md-5 d-flex flex-column justify-content-center align-items-center p-2 row-gap-2\">\r\n                    <img src={OldImage} alt=\"...\" loading='lazy' />\r\n                    <p className='h4'>Old Profile Image</p>\r\n                </div>\r\n                <div className=\"ImageUpdate_New col-md-5 d-flex flex-column justify-content-center align-items-center p-2 row-gap-2\">\r\n                    <img src={Image} alt=\"...\" loading='lazy' />\r\n                    <p className='h4'>Upload Image</p>\r\n                    {Formik.errors.image ? <span className='alert alert-danger w-100'>{Formik.errors.image}</span> : null}\r\n                    <input className=\"form-control\" name='Image' type=\"file\" id=\"formFile\"\r\n                        onChange={(e) => {\r\n                            Formik.setFieldValue('image', e.target.files[0]);\r\n                            ImagePreview(e.target.files[0]);\r\n                        }} />\r\n                </div>\r\n                <input type='submit' className='btn' value='Upload Image' accept=\"image/*\" />\r\n            </motion.form>\r\n        </motion.div>\r\n    </>\r\n\r\n}\r\n"],"names":["ImageUpdate","_ref","UpdateImage","OldImage","Image","setImage","useState","UploadPhoto","Validation","Yup","image","test","value","size","includes","type","Formik","useFormik","initialValues","onSubmit","values","console","log","validationSchema","_jsx","_Fragment","children","motion","div","className","initial","opacity","animate","transition","duration","ease","_jsxs","form","handleSubmit","y","IoMdClose","onClick","src","alt","loading","errors","name","id","onChange","e","setFieldValue","target","files","file","reader","FileReader","readAsDataURL","onload","result","ImagePreview","accept"],"sourceRoot":""}